# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2022-01-04 16:11:57
"""
import arcpy
from sys import argv

def pSQLSDELUDupdateSync(production_LAND_LUD_Dissolve="C:\\Users\\josephh\\AppData\\Roaming\\ESRI\\Desktop10.6\\ArcCatalog\\tsqlgis1_production_land.sde\\Production.LAND.LUD_Dissolve", production_LAND_LUD="C:\\Users\\josephh\\AppData\\Roaming\\ESRI\\Desktop10.6\\ArcCatalog\\washsde_production_land.sde\\production.LAND.LUD", washsde_production_land_sde="C:\\Users\\josephh\\AppData\\Roaming\\ESRI\\Desktop10.6\\ArcCatalog\\washsde_production_land.sde", zWrite_washsde_distribution_land_sde="C:\\Users\\josephh\\AppData\\Roaming\\ESRI\\Desktop10.6\\ArcCatalog\\zWrite_washsde_distribution_land.sde", distribution_LAND_lud_Dissolve="C:\\Users\\josephh\\AppData\\Roaming\\ESRI\\Desktop10.6\\ArcCatalog\\zWrite_washsde_distribution_land.sde\\distribution.LAND.lud_Dissolve"):  # P-SQL SDE LUD Sync Update 2021-12-30

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Model Environment settings
    #with arcpy.EnvManager(XYTolerance="1 Feet", outputCoordinateSystem="PROJCS["NAD_1983_HARN_StatePlane_Oregon_North_FIPS_3601_Feet_Intl",GEOGCS["GCS_North_American_1983_HARN",DATUM["D_North_American_1983_HARN",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Lambert_Conformal_Conic"],PARAMETER["False_Easting",8202099.737532808],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",-120.5],PARAMETER["Standard_Parallel_1",44.33333333333334],PARAMETER["Standard_Parallel_2",46.0],PARAMETER["Latitude_Of_Origin",43.66666666666666],UNIT["Foot",0.3048]]", parallelProcessingFactor="2", 
                          #preserveGlobalIds=True, processorType="GPU", scratchWorkspace=r"C:\Users\josephh\AppData\Roaming\ESRI\Desktop10.6\ArcCatalog\tsqlgis1_production_land.sde", 
                          #workspace=r"C:\Users\josephh\AppData\Roaming\ESRI\Desktop10.6\ArcCatalog\tsqlgis1_production_land.sde"):

    # Process: Delete (Delete) (management)
    Delete_Succeeded = arcpy.management.Delete(in_data=[production_LAND_LUD_Dissolve], data_type="")[0]

    # Process: Pairwise Dissolve (Pairwise Dissolve) (analysis)
    Production_LAND_LUD_Dissolve_new = "C:\\Users\\josephh\\AppData\\Roaming\\ESRI\\Desktop10.6\\ArcCatalog\\tsqlgis1_production_land.sde\\Production.LAND.LUD_Dissolve"
    if Delete_Succeeded:
            with arcpy.EnvManager(parallelProcessingFactor="4", qualifiedFieldNames=False):
                arcpy.analysis.PairwiseDissolve(in_features=production_LAND_LUD, out_feature_class=Production_LAND_LUD_Dissolve_new, dissolve_field=["LUD"], statistics_fields=[], multi_part="SINGLE_PART")

    # Process: Pairwise Integrate (Pairwise Integrate) (analysis)
    if Delete_Succeeded:
            with arcpy.EnvManager(XYTolerance="1 Feet"):
                Integrtate_complete = arcpy.analysis.PairwiseIntegrate(in_features=[Production_LAND_LUD_Dissolve_new], cluster_tolerance="")[0]

    # Process: Synchronize Changes (Synchronize Changes) (management)
    if Delete_Succeeded and Integrtate_complete:
            washsde_production_land_sde_synced, zWrite_washsde_distribution_land_sde_synced = arcpy.management.SynchronizeChanges(geodatabase_1=washsde_production_land_sde, in_replica="LUDrep", geodatabase_2=zWrite_washsde_distribution_land_sde, in_direction="FROM_GEODATABASE1_TO_2", conflict_policy="IN_FAVOR_OF_GDB1", conflict_definition="BY_OBJECT", reconcile="RECONCILE ")

    # Process: Truncate Table (Truncate Table) (management)
    if Delete_Succeeded and Integrtate_complete and zWrite_washsde_distribution_land_sde_synced:
            distribution_LAND_lud_Dissolve_out = arcpy.management.TruncateTable(in_table=distribution_LAND_lud_Dissolve)[0]

    # Process: Append (2) (Append) (management)
    if Delete_Succeeded:
            distribution_LAND_lud_Dissolve_updated = arcpy.management.Append(inputs=Integrtate_complete, target=distribution_LAND_lud_Dissolve, schema_type="TEST", field_mapping="", subtype="", expression="")[0]

if __name__ == '__main__':
    pSQLSDELUDupdateSync(*argv[1:])
